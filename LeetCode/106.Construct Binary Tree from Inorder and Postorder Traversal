/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        if(inorder.size() == 0) return nullptr;
        stack<TreeNode *> stk;
        TreeNode *root, *temp;
        root = new TreeNode(postorder.back());
        postorder.pop_back();
        stk.push(root);
        while(true){
            if(inorder.back() == stk.top() -> val){
                temp = stk.top();
                stk.pop();
                inorder.pop_back();
                if(inorder.size() == 0) break;
                if(stk.size() && inorder.back() == stk.top() -> val) continue;
                temp -> left = new TreeNode(postorder.back());
                postorder.pop_back();
                stk.push(temp -> left);
            }else{
                temp = new TreeNode(postorder.back());
                stk.top() -> right = temp;
                postorder.pop_back();
                stk.push(temp);
            }
        }
        return root;
    }
};
