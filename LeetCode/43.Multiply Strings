class Solution {
public:
    string multiply(string num1, string num2) {
        string product(num1.size() + num2.size(), '0');
        for(int i = num1.size() - 1; i >= 0; --i){
            int carry = 0;
            for(int j = num2.size() - 1; j >= 0; --j){
                int num = (num1[i] - '0') * (num2[j] - '0') + carry + (product[i + j + 1] - '0');
                carry = num / 10;
                product[i + j + 1] = num % 10 + '0';
            }
            product[i] += carry;
        }
        int start_pos = product.find_first_not_of('0');
        if(start_pos != string::npos) return product.substr(start_pos);
        else return "0";
    }
};
